// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// R2RDAC //
// ------ //

#define R2RDAC_wrap_target 0
#define R2RDAC_wrap 1

static const uint16_t R2RDAC_program_instructions[] = {
            //     .wrap_target
    0x80a0, //  0: pull   block                      
    0x6008, //  1: out    pins, 8                    
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program R2RDAC_program = {
    .instructions = R2RDAC_program_instructions,
    .length = 2,
    .origin = -1,
};

static inline pio_sm_config R2RDAC_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + R2RDAC_wrap_target, offset + R2RDAC_wrap);
    return c;
}

    void R2RDAC_program_init(PIO pio, uint sm, uint offset, float div) {
        const uint bitcount = 8;
        pio_sm_config cfg = R2RDAC_program_get_default_config(offset);
        for (int i = 0; i < bitcount; i++) {
            pio_gpio_init(pio, i);
        }
        sm_config_set_out_pins(&cfg, 0, bitcount);
        pio_sm_set_consecutive_pindirs(pio, sm, 0, bitcount, true);
        sm_config_set_clkdiv(&cfg, div);
        pio_sm_init(pio, sm, offset, &cfg);
    }

#endif

